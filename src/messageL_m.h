//
// Generated file, do not edit! Created by nedtool 5.6 from messageL.msg.
//

#ifndef __MESSAGEL_M_H
#define __MESSAGEL_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "msg_m.h"
typedef inet::Msg* msgPtr;
// }}

/**
 * Class generated from <tt>messageL.msg:27</tt> by nedtool.
 * <pre>
 * packet MessageL
 * {
 *     int destId;
 *     msgPtr m;
 * }
 * </pre>
 */
class MessageL : public ::omnetpp::cPacket
{
  protected:
    int destId;
    msgPtr m;

  private:
    void copy(const MessageL& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MessageL&);

  public:
    MessageL(const char *name=nullptr, short kind=0);
    MessageL(const MessageL& other);
    virtual ~MessageL();
    MessageL& operator=(const MessageL& other);
    virtual MessageL *dup() const override {return new MessageL(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getDestId() const;
    virtual void setDestId(int destId);
    virtual msgPtr& getM();
    virtual const msgPtr& getM() const {return const_cast<MessageL*>(this)->getM();}
    virtual void setM(const msgPtr& m);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MessageL& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MessageL& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MESSAGEL_M_H

